
package capaservicio;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WebServiceProducto", targetNamespace = "http://CapaServicio/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServiceProducto {


    /**
     * 
     * @param producto
     */
    @WebMethod
    @RequestWrapper(localName = "webInsertarProducto", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebInsertarProducto")
    @ResponseWrapper(localName = "webInsertarProductoResponse", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebInsertarProductoResponse")
    @Action(input = "http://CapaServicio/WebServiceProducto/webInsertarProductoRequest", output = "http://CapaServicio/WebServiceProducto/webInsertarProductoResponse")
    public void webInsertarProducto(
        @WebParam(name = "Producto", targetNamespace = "")
        Producto producto);

    /**
     * 
     * @param arg1
     * @param idProducto
     */
    @WebMethod
    @RequestWrapper(localName = "webActualizarProducto", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebActualizarProducto")
    @ResponseWrapper(localName = "webActualizarProductoResponse", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebActualizarProductoResponse")
    @Action(input = "http://CapaServicio/WebServiceProducto/webActualizarProductoRequest", output = "http://CapaServicio/WebServiceProducto/webActualizarProductoResponse")
    public void webActualizarProducto(
        @WebParam(name = "id_producto", targetNamespace = "")
        int idProducto,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @return
     *     returns java.util.List<capaservicio.Producto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "webConsultarProducto", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebConsultarProducto")
    @ResponseWrapper(localName = "webConsultarProductoResponse", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebConsultarProductoResponse")
    @Action(input = "http://CapaServicio/WebServiceProducto/webConsultarProductoRequest", output = "http://CapaServicio/WebServiceProducto/webConsultarProductoResponse")
    public List<Producto> webConsultarProducto();

    /**
     * 
     * @param idProducto
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "webExisteProducto", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebExisteProducto")
    @ResponseWrapper(localName = "webExisteProductoResponse", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebExisteProductoResponse")
    @Action(input = "http://CapaServicio/WebServiceProducto/webExisteProductoRequest", output = "http://CapaServicio/WebServiceProducto/webExisteProductoResponse")
    public boolean webExisteProducto(
        @WebParam(name = "id_producto", targetNamespace = "")
        int idProducto);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "webConfigurarConexion", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebConfigurarConexion")
    @ResponseWrapper(localName = "webConfigurarConexionResponse", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebConfigurarConexionResponse")
    @Action(input = "http://CapaServicio/WebServiceProducto/webConfigurarConexionRequest", output = "http://CapaServicio/WebServiceProducto/webConfigurarConexionResponse")
    public void webConfigurarConexion();

    /**
     * 
     * @param idProducto
     * @return
     *     returns java.util.List<capaservicio.Producto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "webBuscarProducto", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebBuscarProducto")
    @ResponseWrapper(localName = "webBuscarProductoResponse", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebBuscarProductoResponse")
    @Action(input = "http://CapaServicio/WebServiceProducto/webBuscarProductoRequest", output = "http://CapaServicio/WebServiceProducto/webBuscarProductoResponse")
    public List<Producto> webBuscarProducto(
        @WebParam(name = "id_producto", targetNamespace = "")
        int idProducto);

    /**
     * 
     * @param idProducto
     */
    @WebMethod
    @RequestWrapper(localName = "webEliminarProducto", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebEliminarProducto")
    @ResponseWrapper(localName = "webEliminarProductoResponse", targetNamespace = "http://CapaServicio/", className = "capaservicio.WebEliminarProductoResponse")
    @Action(input = "http://CapaServicio/WebServiceProducto/webEliminarProductoRequest", output = "http://CapaServicio/WebServiceProducto/webEliminarProductoResponse")
    public void webEliminarProducto(
        @WebParam(name = "id_producto", targetNamespace = "")
        int idProducto);

}
